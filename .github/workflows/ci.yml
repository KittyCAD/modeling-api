on:
    workflow_dispatch:
    pull_request:
      paths:
        - '**.rs'
        - .github/workflows/ci.yml
        - Cargo.lock
        - Cargo.toml
        - '**/Cargo.toml'
        - rust-toolchain.toml
permissions: read-all
name: Rust CI
jobs:
    cargo-test:
      name: cargo test
      runs-on: ubuntu-latest-8-cores
      steps:
        - uses: actions/checkout@v4
        - name: Install Rust
          uses: dtolnay/rust-toolchain@stable
        - uses: taiki-e/install-action@cargo-llvm-cov
        - uses: taiki-e/install-action@nextest
        - uses: Swatinem/rust-cache@v2.7.0
        - uses: taiki-e/install-action@just

        - name: cargo test
          shell: bash
          run: |
            export KITTYCAD_API_TOKEN=${{secrets.KITTYCAD_API_TOKEN}}
            just test-with-coverage
          env:
            RUST_BACKTRACE: 1
  
        - name: Upload to codecov.io
          uses: codecov/codecov-action@v3
          with:
            token: ${{secrets.CODECOV_TOKEN}}
            fail_ci_if_error: true
            flags: unittests
            verbose: true
            files: lcov.info
  
    check-lint:
      name: Check lints
      runs-on: ubuntu-latest-8-cores
      steps:
        - uses: actions/checkout@v4
        - uses: taiki-e/install-action@just
        - name: Install Rust
          uses: dtolnay/rust-toolchain@stable
          with:
            components: clippy
        - uses: Swatinem/rust-cache@v2.7.3

        - name: Check lints
          run: just lint
 
    cargo-fmt:
        name: cargo fmt
        runs-on: ubuntu-latest-8-cores
        steps:
          - uses: actions/checkout@v4
          - name: Install Rust
            uses: dtolnay/rust-toolchain@stable
            with:
                components: rustfmt
  
          - name: cargo fmt
            run: cargo fmt

    can-release:
        name: Check modeling-cmds can release
        runs-on: ubuntu-latest-8-cores
        steps:
          - uses: actions/checkout@v4
          - name: Install Rust
            uses: dtolnay/rust-toolchain@stable
          - name: Dry-run a release of modeling-cmds
            run: cargo publish -p kittycad-modeling-cmds --dry-run

    check-typos:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - uses: taiki-e/install-action@just
        - name: Set up Python
          uses: actions/setup-python@v5 
        - name: Install codespell
          run: python -m pip install codespell
        - name: Run codespell
          # Edit this file to tweak the typo list and other configuration.
          run: just check-typos

    cargo-toml-sorted:
      name: Check Cargo.toml is sorted
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Install cargo-sort
          run: cargo install cargo-sort
        - name: Run check
          run: cargo sort --workspace --check
